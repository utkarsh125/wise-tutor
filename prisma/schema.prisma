// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    // NOTE: When using mysql or sqlserver, uncomment the @db.Text annotations in model Account below
    // Further reading:
    // https://next-auth.js.org/adapters/prisma#create-the-prisma-schema
    // https://www.prisma.io/docs/reference/api-reference/prisma-schema-reference#string
    url      = env("DATABASE_URL")
}

model User {

    id String @id @default(cuid())
    emailAddress String @unique 
    firstName String?
    lastName String? 
    imageUrl String?
    chats ChatHistory[]
    
}

model ChatHistory {
    id String @id @default(cuid())
    createdAt DateTime @default(now())
    name String
    userId String? 
    user User? @relation(fields: [userId], references: [id])
    messages ChatMessage[]
}

model ChatMessage {

    id String @id @default(cuid())
    chatId String
    chat ChatHistory @relation(fields: [chatId], references: [id])
    createdAt DateTime @default(now())
    sender MessageSender
    content String


}


enum MessageSender{
    USER
    BOT
}


//The plan is to make the user able to upload PDF and suggest things accordingly.
//TODO: Document
//TODO: Embeddings

